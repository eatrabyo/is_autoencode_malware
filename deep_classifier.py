import keras

def classifier(no_features,compile=True):
    model = keras.Sequential([
        keras.layers.InputLayer(input_shape = (no_features,)),
        keras.layers.Dense(400, activation=keras.layers.LeakyReLU(),name="dense_1"),
        keras.layers.BatchNormalization(name="batch_norm_1"),
        keras.layers.Dense(300, activation=keras.layers.LeakyReLU(),name="dense_2"),
        keras.layers.BatchNormalization(name="batch_norm_2"),
        keras.layers.Dense(200, activation=keras.layers.LeakyReLU(),name="dense_3"),
        keras.layers.BatchNormalization(name="batch_norm_3"),
        keras.layers.Dense(100, activation=keras.layers.LeakyReLU(),name="dense_4"),
        keras.layers.BatchNormalization(name="batch_norm_4"),
        keras.layers.Dense(50, activation=keras.layers.LeakyReLU(),name="dense_5"),
        keras.layers.BatchNormalization(name="batch_norm_5"),
        keras.layers.Dense(25, activation=keras.layers.LeakyReLU(),name="dense_6"),
        keras.layers.BatchNormalization(name="batch_norm_6"),
        keras.layers.Dense(12, activation=keras.layers.LeakyReLU(),name="dense_7"),
        keras.layers.BatchNormalization(name="batch_norm_7"),
        keras.layers.Dense(1, activation='sigmoid',name="dense_8")
    ])

    if compile == True:
        model.compile(optimizer=keras.optimizers.Adam(learning_rate=0.0001), loss=keras.losses.BinaryCrossentropy(),
                    metrics = [
                        keras.metrics.BinaryAccuracy(name = 'Binary Accuracy',threshold=0.5),
                        ])
        return model
    if compile == False:
        return model
    
if __name__ == '__main__':
    model = classifier(600)
    print(model.layers)