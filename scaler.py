from sklearn.preprocessing import RobustScaler,MinMaxScaler,StandardScaler
import numpy as np

def scaler(train,test,validate=None):
    print('Scaling Begins')
    scaler = StandardScaler()
    scaler.fit(train)
    
    scale_train = scaler.transform(train)
    scale_test = scaler.transform(test)
    
    if validate is not None:
        scale_valid = scaler.transform(validate)
        print('Scaling Finish')
        return scale_train,scale_valid,scale_test
    
    else:
        print('Scaling Finish')
        return scale_train,scale_test

if __name__ == '__main__':
    TRAIN_PATH = 'data/train_set.npz'
    VALID_PATH = 'data/validate_set.npz'
    TEST_PATH = 'data/test_set.npz'

    train_set = np.load(TRAIN_PATH)
    valid_set = np.load(VALID_PATH)
    test_set = np.load(TEST_PATH)

    X_train = train_set['x']
    X_valid = valid_set['x']
    X_test = test_set['x']

    train,validate,test = scaler(X_train,X_valid,X_test)
    
    print(train.shape)